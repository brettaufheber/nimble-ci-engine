# Scenario S18-p — Layered fan-in 3→2 (full join) DAG; using pipelines
# Shape: (A1, A2, A3) -> (B1, B2)
# Expectation:
#   • A1..A3 may run in parallel.
#   • B1 and B2 each wait for ALL A* and may then run in parallel.

variables:
  MAX_CONCURRENT_PIPELINES: "0"
  MAX_CONCURRENT_JOBS_PER_PIPELINE: "0"
  TEST_COMMAND: { tpl: '"\(env.TEST_DIR)/concurrency_probe.sh"' }
  INSTALL_DIR: { tpl: 'env.INSTALL_DIR' }
  CI_CONFIG_FILE: { tpl: '"\(env.TEST_RESOURCES_DIR)/ci.yaml"' }
  STATE_FILE: { tpl: 'env.STATE_FILE' }
  JQ_MODULE_PATH: { tpl: 'env.JQ_MODULE_PATH' }
  SCHEMA_BASE_URI: { tpl: 'env.SCHEMA_BASE_URI' }
  SLEEP: "0.01"
concurrency:
  max_parallel_pipelines: { tpl: '$vars.MAX_CONCURRENT_PIPELINES | tonumber' }
  max_parallel_jobs_per_pipeline: { tpl: '$vars.MAX_CONCURRENT_JOBS_PER_PIPELINE | tonumber' }
pipelines:
  - name: A1
    needs: [ ]
    jobs:
      - name: A1
        steps:
          - tpl: '$vars.TEST_COMMAND'
  - name: A2
    needs: [ ]
    jobs:
      - name: A2
        steps:
          - tpl: '$vars.TEST_COMMAND'
  - name: A3
    needs: [ ]
    jobs:
      - name: A3
        steps:
          - tpl: '$vars.TEST_COMMAND'
  - name: B1
    needs: [ A1, A2, A3 ]
    jobs:
      - name: B1
        steps:
          - tpl: '$vars.TEST_COMMAND'
  - name: B2
    needs: [ A1, A2, A3 ]
    jobs:
      - name: B2
        steps:
          - tpl: '$vars.TEST_COMMAND'
